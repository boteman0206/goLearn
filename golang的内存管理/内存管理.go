package main

/**

https://mp.weixin.qq.com/s/J3Sfo9u63aTG6IndFP-BnQ


1: 何为内存
2:内存为什么需要管理
（1）操作系统就会对内存进行非常详细的管理。
（2）基于操作系统的基础上，不同语言的内存管理机制也应允而生，有的一些语言并没有提供自动的内存管理模式，有的语言就已经提供了自身程序的内存管理模式

3: 操作系统如何管理内存
所以就引出了操作系统的内存管理方式，操作系统提供了虚拟内存来解决这件事。
3.1： 虚拟内存：    虚拟内存地址是基于物理内存地址之上凭空而造的一个新的逻辑地址，而操作系统暴露给用户进程的只是虚拟内存地址，操作系统内部会对虚拟内存地址和真实的物理内存地址做映射关系，来管理地址的分配，从而使物理内存的利用率提高。
	（1）物理内存无法被最大化利用。
    （2）程序逻辑内存空间使用独立。
    （3）内存不够，继续虚拟磁盘空间。
		是虚拟内存为了最大化利用物理内存，如果进程使用的内存足够大，则导致物理内存短暂的供不应求，那么虚拟内存也会“开疆拓土”从磁盘（硬盘）上虚拟出一定量的空间，挂在虚拟地址上，而且这个动作进程本身是不知道的，因为进程只能够看见自己的虚拟内存空间
3.2： MMU内存管理单元
	  MMU是在CPU里的，或者说是CPU具有一个内存管理单元MMU，下面来介绍一下MMU具体的管理逻辑。
3.3： 虚拟内存本身怎么存放
	虚拟内存本身是通过一个叫页表（Page Table）的东西来实现的，接下来介绍页和页表这两个概念。
	1.页
    	页是操作系统中用来描述内存大小的一个单位名称。一个页的含义是大小为4K（1024*4=4096字节）的内存空间。操作系统对虚拟内存空间是按照这个单位来管理的。
	2.页表
    	页表实际上就是页的集合，就是基于页的一个数组。页只是表示内存的大小，而页表条目（PTE[1]）, 才是页表数组中的一个元素
	[1] PTE是Page Table Entry的缩写，表示页表条目。PTE是由一个有效位和N位地址字段构成，能够有效标识这个虚拟内存地址是否分配了物理内存。
3.4： CPU内存访问过程
3.4: 内存的局部性
	 局部性就是在多次内存引用的时候，会出现有的内存被经常引用多次，而且在该位置附近的其他位置，也有可能接下来被引用到。一般大多数程序都会具备局部性的特点。


4: 基于Cgo的内存C接口封装
*/
