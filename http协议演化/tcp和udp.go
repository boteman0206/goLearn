package http协议演化

/**


1: TCP 四元组可以唯一的确定一个连接，四元组包括如下：
源地址
源端口
目的地址
目的端口

2: 有一个 IP 的服务端监听了一个端口，它的 TCP 的最大连接数是多少？
对 IPv4，客户端的 IP 数最多为 2 的 32 次方，客户端的端口数最多为 2 的 16 次方，也就是服务端单机最大 TCP 连接数，约为 2 的 48 次方。
当然，服务端最大并发 TCP 连接数远不能达到理论上限，会受以下因素影响：
	文件描述符限制，每个 TCP 连接都是一个文件，如果文件描述符被占满了，会发生 too many open files。Linux 对可打开的文件描述符的数量分别作了三个方面的限制：
	系统级：当前系统可打开的最大数量，通过 cat /proc/sys/fs/file-max 查看；
	用户级：指定用户可打开的最大数量，通过 cat /etc/security/limits.conf 查看；
	进程级：单个进程可打开的最大数量，通过 cat /proc/sys/fs/nr_open 查看；
	内存限制，每个 TCP 连接都要占用一定内存，操作系统的内存是有限的，如果内存资源被占满后，会发生 OOM
3: UDP 和 TCP 有什么区别呢？分别的应用场景是？
3.1. 连接
	TCP 是面向连接的传输层协议，传输数据前先要建立连接。
	UDP 是不需要连接，即刻传输数据。
3.2. 服务对象
	TCP 是一对一的两点服务，即一条连接只有两个端点。
	UDP 支持一对一、一对多、多对多的交互通信
3.3. 可靠性
	TCP 是可靠交付数据的，数据可以无差错、不丢失、不重复、按序到达。
	UDP 是尽最大努力交付，不保证可靠交付数据。但是我们可以基于 UDP 传输协议实现一个可靠的传输协议，比如 QUIC 协议
3.4. 拥塞控制、流量控制
	TCP 有拥塞控制和流量控制机制，保证数据传输的安全性。
	UDP 则没有，即使网络非常拥堵了，也不会影响 UDP 的发送速率
3.5. 首部开销
	TCP 首部长度较长，会有一定的开销，首部在没有使用「选项」字段时是 20 个字节，如果使用了「选项」字段则会变长的。
	UDP 首部只有 8 个字节，并且是固定不变的，开销较小。
3.6. 传输方式
	TCP 是流式传输，没有边界，但保证顺序和可靠。
	UDP 是一个包一个包的发送，是有边界的，但可能会丢包和乱序。
3.7. 分片不同
	TCP 的数据大小如果大于 MSS 大小，则会在传输层进行分片，目标主机收到后，也同样在传输层组装 TCP 数据包，如果中途丢失了一个分片，只需要传输丢失的这个分片。
	UDP 的数据大小如果大于 MTU 大小，则会在 IP 层进行分片，目标主机收到后，在 IP 层组装完数据，接着再传给传输层。


*/
