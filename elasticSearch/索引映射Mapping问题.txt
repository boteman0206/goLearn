
常用字段类型：
    字符串类型
        Text：用于存储长文本内容，会进行分词和索引。常用于全文搜索。
        Keyword：用于存储关键词或短语，不会进行分词，整个字段作为一个整体进行索引。常用于精确匹配和聚合操作。
    数字类型
        Numeric：包括整数和浮点数类型，用于存储数值数据。根据数据范围和精度的不同，可以选择合适的子类型，如long、integer、short、byte、double、float、half_float等。
    日期类型
        Date：用于存储日期和时间数据。支持多种日期格式，可以进行日期范围查询和聚合。
    布尔类型
        Boolean：用于存储布尔值，即true或false。
    复杂数据类型
        数组数据类型
        对象数据类型：  Object：用于存储复杂结构的对象。可以包含多个字段，并支持嵌套对象。
        嵌套数据类型（Nested datatype） Nested：类似于Object类型，但支持独立的查询和索引，适用于需要独立处理内部对象的情况。
    Geo数据类型
        Geo Point：用于存储地理坐标，如经度和纬度。支持地理位置查询和聚合操作。
        Geo Shape：用于存储复杂的地理形状数据，如多边形、线条、点等。支持地理形状查询和分析。
    Binary：用于存储二进制数据，如图片、音频、视频等。
    专用数据类型
        除了以上列举的常见字段类型，Elasticsearch还提供了一些特殊的字段类型和字段参数，用于满足不同的需求，如IP类型、Completion类型、Token Count类型等。

这里我们重点介绍下 text 和 keyword 的区别:
    text 用于索引全文值的字段，例如电子邮件正文或产品说明。这些字段是analyzed，它们通过分词器传递 ，以在被索引之前将字符串转换为单个术语的列表。分析过程允许Elasticsearch搜索单个单词中 每个完整的文本字段。文本字段不用于排序，很少用于聚合（尽管 重要的文本聚合 是一个值得注意的例外）。
    keyword 用于索引结构化内容的字段，例如电子邮件地址，主机名，状态代码，邮政编码或标签。它们通常用于过滤，排序，和聚合。keyword字段只能按其确切值进行搜索。如果您需要索引电子邮件正文或产品说明等全文内容，则可能应该使用text字段。
    有时候一个字段同时拥有全文类型（text）和关键字类型（keyword）是有用的：一个用于全文搜索，另一个用于聚合和排序。这可以通过多字段类型来实现。


多字段：
    有时候单纯的一个字段类型满足不了我们复杂的需求，为了不同的目的，以不同的方式索引同一个字段通常很有用。多字段也是ES的一种数据类型，只不过结合了更多的功能。
    例如，对于字符串字段，我们既可以将它映射为text类型用于全文搜索，亦可以将它映射为keyword类型用于排序或聚合，或者，还可以使用标准分词器、英语分词器和其他语言分词器索引文本字段。



映射
    映射是定义一个文档及其包含的字段如何存储和索引的过程。例如，使用映射来定义：
        应将哪些字符串字段视为全文字段。
        哪些字段包含数字，日期或地理位置。
        是否应将文档中所有字段的值索引到catch-all _all字段中。
        日期值的格式。
        自定义规则以控制动态添加字段的映射。
    其实在 ElasticSearch中可以不需要事先定义映射（Mapping），文档写入ElasticSearch时，会根据文档字段自动识别类型，但是通过这种自动识别的字段不是很精确，对于一些复杂的需要分词的就不适合了。
    动态映射
        即不事先指定映射类型(Mapping)，文档写入ElasticSearch时，ES会根据文档字段自动识别类型，这种机制称之为动态映射。
    静态映射
        即人为事先定义好映射，包含文档的各个字段及其类型等，这种方式称之为静态映射，亦可称为显式映射。

    获取索引的映射信息
        GET library/_mapping  # 获取mapping信息


